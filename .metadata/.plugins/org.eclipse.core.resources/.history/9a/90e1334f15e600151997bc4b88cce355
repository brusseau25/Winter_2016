import java.util.Random;

public class Pi {

	public static void main(String[] args) {
		Random randNum = new Random();
		int[] randNumArray = new int[100];
		int gcd;
		int sum = 0;

		for (int i = 0; i < randNumArray.length; i++) {
			randNumArray[i] = randNum.nextInt(100) + 1;
		}

		for (int j = 0; j < randNumArray.length / 2; j++) {
			gcd = findGCD(randNumArray[j], randNumArray[j + 1]);
			//j += 2;
			if (gcd == 1) {
				sum++;
			}
		}

		System.out.printf("Estimate of pi = %f", estimatePI(randNumArray, sum));
	}

	/*
	 * code from: http://java67.blogspot.com/2012/08/
	 * java-program-to-find-gcd-of-two-numbers.html
	 */
	private static int findGCD(int x, int y) {
		// base case
		if (y == 0) {
			return x;
		}
		return findGCD(y, x % y);
	}

	private static double estimatePI(int[] matrix, int sum) {
		double PI, num;
		num = (double) sum / matrix.length;
		PI = Math.sqrt(6.0 / num);

		return PI;
	}
}
