
/*
 * Brandon Russeau
 * COSC 423
 * Virtual Memory Page Replacement Project
 * Driver class
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class Driver {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = null;
		ArrayList<Integer> referenceString;
		int frames;

		try {
			scan = new Scanner(new File("pages.dat"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		while (scan.hasNextLine()) {
			referenceString = new ArrayList<Integer>();
			System.out.print("Number of Frames: ");
			frames = scan.nextInt();
			System.out.println(frames);

			int tmp;
			while (scan.hasNextLine()) {
				tmp = scan.nextInt();
				if (tmp != -1) {
					referenceString.add(tmp);
				} else {
					break;
				}
			}

			FIFO p = new FIFO(referenceString, frames);
			p.fifoAlgo();

			LRU q = new LRU(referenceString, frames);
			q.lruAlgo();

			LFU r = new LFU(referenceString, frames);
			r.lfuAlgo();

			Optimal s = new Optimal(referenceString, frames);
			s.optimalAlgo();

			System.out.println("Scheme  Faults  %Optimal");
			System.out.printf("FIFO %5d %10.1f/%\n", p.getFaults(), ((double) p.getFaults() / s.getFaults()) * 100);
			System.out.printf("LRU %6d %10.1f/%\n", q.getFaults(), ((double) q.getFaults() / s.getFaults()) * 100);
			System.out.printf("LFU %6d %10.1f/%\n", r.getFaults(), ((double) r.getFaults() / s.getFaults()) * 100);
			System.out.printf("Optimal %1d %11.1f/%\n", s.getFaults(), ((double) s.getFaults() / s.getFaults()) * 100);

			System.out.println();
		}

	}
}
